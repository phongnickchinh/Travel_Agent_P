"""add cost usage db

Revision ID: e0ca631457c6
Revises: 157d06053aa6
Create Date: 2025-10-28 00:14:04.104331

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e0ca631457c6'
down_revision = '157d06053aa6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cost_usage',
    sa.Column('provider', sa.String(length=50), nullable=False, comment='Provider name: google_places, openai, tripadvisor, huggingface, etc.'),
    sa.Column('service', sa.String(length=100), nullable=True, comment='Specific service/API: places_search, text_details, chat_completion, etc.'),
    sa.Column('endpoint', sa.String(length=200), nullable=True, comment='API endpoint called'),
    sa.Column('method', sa.String(length=10), nullable=True, comment='HTTP method: GET, POST, etc.'),
    sa.Column('tokens_input', sa.Integer(), server_default='0', nullable=False, comment='Input tokens (for LLM APIs)'),
    sa.Column('tokens_output', sa.Integer(), server_default='0', nullable=False, comment='Output tokens (for LLM APIs)'),
    sa.Column('tokens_total', sa.Integer(), server_default='0', nullable=False, comment='Total tokens (input + output)'),
    sa.Column('cost_usd', sa.Numeric(precision=10, scale=6), server_default='0.0', nullable=False, comment='Cost in USD (calculated from pricing)'),
    sa.Column('latency_ms', sa.Integer(), nullable=True, comment='Response latency in milliseconds'),
    sa.Column('status_code', sa.Integer(), nullable=True, comment='HTTP status code'),
    sa.Column('success', sa.Boolean(), server_default='true', nullable=False, comment='Whether request was successful'),
    sa.Column('user_id', sa.String(length=36), nullable=True, comment='User who triggered the request'),
    sa.Column('plan_id', sa.String(length=50), nullable=True, comment='Plan ID if request is part of plan generation'),
    sa.Column('request_id', sa.String(length=100), nullable=True, comment='Unique request ID for tracing'),
    sa.Column('extra_metadata', sa.JSON(), nullable=True, comment='Additional metadata (request params, response summary, etc.)'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if request failed'),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cost_usage', schema=None) as batch_op:
        batch_op.create_index('idx_cost_usage_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_cost_usage_plan_id', ['plan_id'], unique=False)
        batch_op.create_index('idx_cost_usage_provider', ['provider'], unique=False)
        batch_op.create_index('idx_cost_usage_provider_created', ['provider', 'created_at'], unique=False)
        batch_op.create_index('idx_cost_usage_success', ['success'], unique=False)
        batch_op.create_index('idx_cost_usage_user_id', ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('cost_usage', schema=None) as batch_op:
        batch_op.drop_index('idx_cost_usage_user_id')
        batch_op.drop_index('idx_cost_usage_success')
        batch_op.drop_index('idx_cost_usage_provider_created')
        batch_op.drop_index('idx_cost_usage_provider')
        batch_op.drop_index('idx_cost_usage_plan_id')
        batch_op.drop_index('idx_cost_usage_created_at')

    op.drop_table('cost_usage')
    # ### end Alembic commands ###
